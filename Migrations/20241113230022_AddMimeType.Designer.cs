// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demo_boeing_peoplesoft.Data;

#nullable disable

namespace demo_boeing_peoplesoft.Migrations
{
    [DbContext(typeof(BoeingDbContext))]
    [Migration("20241113230022_AddMimeType")]
    partial class AddMimeType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogCategory", b =>
                {
                    b.Property<int>("BlogCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("BlogCategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("BlogCategories");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogEntry", b =>
                {
                    b.Property<int>("BlogEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogEntryId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogEntryId");

                    b.HasIndex("UrlSlug");

                    b.HasIndex("UserId");

                    b.ToTable("BlogEntries");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogEntryCategory", b =>
                {
                    b.Property<int>("BlogCategoryId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("BlogEntryId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("BlogCategoryId", "BlogEntryId");

                    b.HasIndex("BlogEntryId");

                    b.ToTable("BlogEntryCategories");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.MediaFile", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaId"));

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("OriginalFilename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Filesize")
                        .HasColumnType("int");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("S3Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MediaId");

                    b.ToTable("MediaFiles");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProfileImageID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("ProfileImageID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogCategory", b =>
                {
                    b.HasOne("demo_boeing_peoplesoft.Models.BlogCategory", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogEntry", b =>
                {
                    b.HasOne("demo_boeing_peoplesoft.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogEntryCategory", b =>
                {
                    b.HasOne("demo_boeing_peoplesoft.Models.BlogCategory", "BlogCategory")
                        .WithMany("BlogEntryCategories")
                        .HasForeignKey("BlogCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("demo_boeing_peoplesoft.Models.BlogEntry", "BlogEntry")
                        .WithMany("BlogEntryCategories")
                        .HasForeignKey("BlogEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogCategory");

                    b.Navigation("BlogEntry");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.UserModel", b =>
                {
                    b.HasOne("demo_boeing_peoplesoft.Models.MediaFile", "ProfileImage")
                        .WithMany()
                        .HasForeignKey("ProfileImageID");

                    b.Navigation("ProfileImage");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogCategory", b =>
                {
                    b.Navigation("BlogEntryCategories");
                });

            modelBuilder.Entity("demo_boeing_peoplesoft.Models.BlogEntry", b =>
                {
                    b.Navigation("BlogEntryCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
